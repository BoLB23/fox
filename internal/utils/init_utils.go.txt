package utils

import (
	"io"
	"os"
	"path/filepath"
	"strings"

	"io/fs"

	"github.com/xigxog/kubefox-cli/efs"
	"github.com/xigxog/kubefox-cli/internal/log"
)

func (cut *CmdUtils) InitDemo() {
	dir := cut.flags.SysRepoPath
	log.Info("Writing files for a demo KubeFox system to '%s'", dir)
	ensureDir(dir)
	if !IsDirEmpty(dir) {
		log.Fatal("Directory '%s' is not empty", dir)
	}

	fs.WalkDir(efs.EFS, efs.DemoSystemPath,
		func(efsPath string, d fs.DirEntry, err error) error {
			if err != nil {
				log.Fatal("Error initializing KubeFox system: %v", err)
			}
			if d.IsDir() {
				return nil
			}

			// Go will not embed directories containing a go.mod file. To
			// resolve this the extension .trim is added. Removing it here.
			path := strings.TrimPrefix(strings.TrimSuffix(efsPath, ".trim"), efs.DemoSystemPath)
			path = filepath.Join(cut.flags.SysRepoPath, path)

			log.Verbose("Writing file '%s'", path)
			ensureDirForFile(path)
			if fileExists(path) {
				log.Fatal("File '%s' exists", path)
			}

			data, _ := efs.EFS.ReadFile(efsPath)
			if err := os.WriteFile(path, data, 0666); err != nil {
				log.Fatal("Error creating file: %v", err)
			}

			return nil
		})
}

func IsDirEmpty(name string) bool {
	f, err := os.Open(name)
	if err != nil {
		log.Fatal("%v", err)
	}
	defer f.Close()

	_, err = f.Readdirnames(1)
	if err == io.EOF {
		return true
	}

	return false
}
